{
	"id": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
	"name": "API - Metadata/Version/AppCheck",
	"description": "APi requests for metadata, versioning and app-check",
	"order": [
		"28003b07-5203-1f87-8c92-5b68dd5c5ead",
		"9448a4dd-6dc1-1c49-3b90-ffa8da921d11",
		"f1184b01-c2c2-cffe-08b8-484907c4021b",
		"3f4c20ba-fd56-67f4-a88a-43e5f8c48ee5",
		"5f70aa1f-ad93-f5f7-69e2-8ec7e0a33f51",
		"3493039d-89ed-12d4-350a-8b7a590337a9",
		"4bbd39ca-25a2-8782-d036-607b5022d527",
		"4d72b35b-0868-3e08-d9c0-219007c8112c",
		"87ddd2f3-3bca-26d5-fdf9-41ac85c7f793",
		"5a327c29-a86e-956c-eabe-fabf38a60050",
		"86341fb8-15fc-6302-1ce8-f6edefc9424c",
		"fd7a4e0e-a3c0-f1f9-3c0a-cadeefe8bd7f",
		"a91dd809-7864-4e67-fb61-9f3fec3a88bb",
		"54030c6e-8261-8f19-769c-c66644759edb",
		"2bd949fb-77ea-96e6-dbd1-c3514f47b03e",
		"31860499-dd5e-d3a7-d8a8-426ac127bb07",
		"8dbb0aad-0b54-d908-748d-de4b264aecf4",
		"143262d7-47f0-a451-d498-1684ff352cf7",
		"9d88064d-ee6d-4291-81e6-c7248d341b21",
		"cc16dfeb-b11f-d2ec-5a22-40a370d611bc",
		"283fbd78-44a2-fdbc-81a9-326c56148277",
		"04fc3829-58fd-7a29-cc19-aa59c06431d5",
		"39369004-0975-35e5-c900-6cd3abf645a4",
		"0fb7cedb-c86c-df50-0b83-01ba9d17ca5b",
		"ccb01542-66ac-2bc1-af2d-9f5fa503e522",
		"c64122e0-72cb-ded2-49d0-d4adc4a490fa",
		"fb223f37-78b9-86e2-e252-d0578da53437",
		"a09a2c89-c50d-45d6-bc2a-69427a2056b5"
	],
	"folders": [],
	"timestamp": 0,
	"owner": "49600",
	"remoteLink": "",
	"public": false,
	"createdAt": "2015-05-29T19:21:56.000Z",
	"updatedAt": "2015-06-02T19:25:00.000Z",
	"synced": false,
	"requests": [
		{
			"id": "04fc3829-58fd-7a29-cc19-aa59c06431d5",
			"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
			"url": "{{engage_gk}}/metadata-catalog/messages",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Messages metadata OK\"] = data.name === \"messages\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435173226444,
			"name": "GET /metadata-catalog/messages ",
			"description": "Getting metadata list for messages JSON",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 97,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Encoding",
							"key": "Content-Encoding",
							"value": "gzip",
							"description": "The type of encoding used on the data."
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Tue, 16 Jun 2015 20:52:08 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "Transfer-Encoding",
							"key": "Transfer-Encoding",
							"value": "chunked",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "897",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"name\":\"messages\",\"links\":[{\"rel\":\"alternate\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/metadata-catalog/messages\",\"mediaType\":\"application/schema+json\"},{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/metadata-catalog/messages\",\"mediaType\":\"application/json\"},{\"rel\":\"describes\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/messages\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "84024b3a-533d-86e8-7e96-8d919d21b120",
					"name": "Sample response",
					"request": {
						"name": "GET /metadata-catalog/messages ",
						"description": "Getting metadata list for messages JSON",
						"url": "{{engage_gk}}/metadata-catalog/messages",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nContent-Type: application/json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "04fc3829-58fd-7a29-cc19-aa59c06431d5",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "1e28fb72-3f47-dfaf-089a-0bb6ce92b1f4"
					}
				}
			],
			"synced": false
		},
		{
			"id": "0fb7cedb-c86c-df50-0b83-01ba9d17ca5b",
			"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
			"url": "{{engage_gk}}/messages/metadata-catalog/replies",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Replies metadata OK\"] = data.name === \"replies\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435173193668,
			"name": "GET /messages/metadata-catalog/replies",
			"description": "Getting metadata list for replies JSON",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 337,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "close",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "394",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/vnd.oracle.resource+json; type=singular",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Wed, 24 Jun 2015 19:13:22 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "897",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"name\":\"replies\",\"links\":[{\"rel\":\"alternate\",\"href\":\"https://public-api.vitrue.com/engage/v1/messages/metadata-catalog/replies\",\"mediaType\":\"application/schema+json\"},{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/engage/v1/messages/metadata-catalog/replies\",\"mediaType\":\"application/json\"},{\"rel\":\"describes\",\"href\":\"https://public-api.vitrue.com/engage/v1/messages/{id}/replies\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "0c861371-4400-3d59-c4f3-234a9bfbb18f",
					"name": "Sample response",
					"request": {
						"name": "GET /messages/metadata-catalog/replies",
						"description": "Getting metadata list for replies JSON",
						"url": "{{engage_gk}}/messages/metadata-catalog/replies",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Replies metadata OK\"] = data.name === \"replies\";",
						"isFromCollection": true,
						"version": 2,
						"id": "0fb7cedb-c86c-df50-0b83-01ba9d17ca5b",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true,
							"Replies metadata OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "f8853f37-7801-e7d2-293f-32d93a9784df"
					}
				}
			],
			"synced": false
		},
		{
			"id": "143262d7-47f0-a451-d498-1684ff352cf7",
			"headers": "Authorization: {{auth_token}}\nAccept: application/schema+json\n",
			"url": "{{accounts_gk}}/accounts/metadata-catalog/resources",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435012655248,
			"name": "GET /accounts/metadata-catalog/resources(schema)",
			"description": "Getting decription of resources metadata catalog in accounts SCHEMA+JSON",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 339,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "close",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "1212",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/schema+json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Wed, 24 Jun 2015 18:59:43 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "887",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"$schema\":\"https://public-api.vitrue.com/oraschema\",\"definitions\":{\"accountId\":{\"type\":\"integer\",\"description\":\"The ID for the account.\"},\"resource\":{\"allOf\":[{\"$ref\":\"https://public-api.vitrue.com/oraschema#/definitions/singularResource\"}],\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"The id for this resource.\"},\"name\":{\"type\":\"string\",\"description\":\"The name of this resource.\"},\"resourceType\":{\"type\":\"string\",\"description\":\"The type of resource.\"},\"accountId\":{\"$ref\":\"#/definitions/accountId\"}},\"links\":[{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/admin/v1/resources/{id}\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://public-api.vitrue.com/admin/v1/resources/{id}\",\"method\":\"GET\"}]},\"resources\":{\"allOf\":[{\"$ref\":\"https://public-api.vitrue.com/oraschema#/definitions/collectionPagedResource\"}],\"properties\":{\"items\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/resource\"}}}}},\"allOf\":[{\"$ref\":\"#/definitions/resources\"}],\"links\":[{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/admin/v1/accounts/{#/definitions/accountId}/resources\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://public-api.vitrue.com/admin/v1/accounts/{#/definitions/accountId}/resources\",\"method\":\"GET\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "c2e6e456-d692-5d8d-fb9e-6ba043f9689a",
					"name": "Sample response",
					"request": {
						"name": "GET /accounts/metadata-catalog/resources(schema)",
						"description": "Getting decription of resources metadata catalog in accounts SCHEMA+JSON",
						"url": "{{accounts_gk}}/accounts/metadata-catalog/resources",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nAccept: application/schema+json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "143262d7-47f0-a451-d498-1684ff352cf7",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "f8853f37-7801-e7d2-293f-32d93a9784df"
					}
				}
			],
			"synced": false
		},
		{
			"id": "28003b07-5203-1f87-8c92-5b68dd5c5ead",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "{{base_url}}/app-check",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Components - Redis OK\"] = data.components.redis === true;\ntests[\"Components - Postgres OK\"] = data.components.postgres === true;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435171544738,
			"name": "GET /app-check",
			"description": "Getting app-check data",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 147,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Encoding",
							"key": "Content-Encoding",
							"value": "gzip",
							"description": "The type of encoding used on the data."
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Tue, 16 Jun 2015 20:50:02 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "Transfer-Encoding",
							"key": "Transfer-Encoding",
							"value": "chunked",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"metrics\":{\"engage_errors_5xx\":{\"current\":19},\"publish_errors_4xx\":{\"current\":7},\"engage_total_requests\":{\"current\":102},\"srm_api_errors_4xx\":{\"current\":63},\"admin_errors_4xx\":{\"current\":3},\"publish_errors_5xx\":{\"current\":0},\"srm_api_errors_5xx\":{\"current\":19},\"publish_total_requests\":{\"current\":26},\"srm_api_total_requests\":{\"current\":276},\"admin_errors_5xx\":{\"current\":0},\"admin_total_requests\":{\"current\":61},\"engage_errors_4xx\":{\"current\":3}},\"components\":{\"redis\":true,\"postgres\":true}}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "6244dc3e-b1ac-9c7f-2973-6c7876f7c5f9",
					"name": "Sample response",
					"request": {
						"name": "GET /app-check",
						"description": "Getting app-check data",
						"url": "{{base_url}}/app-check",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "28003b07-5203-1f87-8c92-5b68dd5c5ead",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "1e28fb72-3f47-dfaf-089a-0bb6ce92b1f4"
					}
				}
			],
			"synced": false
		},
		{
			"id": "283fbd78-44a2-fdbc-81a9-326c56148277",
			"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
			"url": "{{engage_gk}}/metadata-catalog",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Engage metadata OK\"] = data.items[0].name === \"messages\";\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435172766189,
			"name": "GET /metadata-catalog (Engage)",
			"description": "Getting metadata for Engage",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 342,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "close",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "536",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/vnd.oracle.resource+json; type=collection",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Wed, 24 Jun 2015 19:06:21 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "881",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"items\":[{\"name\":\"messages\",\"links\":[{\"rel\":\"alternate\",\"href\":\"https://public-api.vitrue.com/engage/v1/metadata-catalog/messages\",\"mediaType\":\"application/schema+json\"},{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/engage/v1/metadata-catalog/messages\",\"mediaType\":\"application/json\"},{\"rel\":\"describes\",\"href\":\"https://public-api.vitrue.com/engage/v1/messages\"}]}],\"links\":[{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/engage/v1/metadata-catalog\"},{\"rel\":\"up\",\"href\":\"https://public-api.vitrue.com/engage/v1\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "24a4d73e-7ab8-4647-be45-b2fbbe3296b9",
					"name": "Sample response",
					"request": {
						"name": "GET /metadata-catalog (Engage)",
						"description": "Getting metadata for Engage",
						"url": "{{engage_gk}}/metadata-catalog",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Engage metadata OK\"] = data.items[0].name === \"messages\";\n",
						"isFromCollection": true,
						"version": 2,
						"id": "283fbd78-44a2-fdbc-81a9-326c56148277",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true,
							"Engage metadata OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "f8853f37-7801-e7d2-293f-32d93a9784df"
					}
				}
			],
			"synced": false
		},
		{
			"id": "2bd949fb-77ea-96e6-dbd1-c3514f47b03e",
			"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
			"url": "{{accounts_gk}}/metadata-catalog/resources",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Resources metadata OK\"] = data.name === \"resources\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435172050803,
			"name": "GET /metadata-catalog/resources",
			"description": "Getting decription of resources metadata catalog",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 495,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "close",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "367",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/vnd.oracle.resource+json; type=singular",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Wed, 24 Jun 2015 18:58:34 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "890",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"name\":\"resources\",\"links\":[{\"rel\":\"alternate\",\"href\":\"https://public-api.vitrue.com/admin/v1/metadata-catalog/resources\",\"mediaType\":\"application/schema+json\"},{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/admin/v1/metadata-catalog/resources\",\"mediaType\":\"application/json\"},{\"rel\":\"describes\",\"href\":\"https://public-api.vitrue.com/admin/v1/resources\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "1ae28ee6-5239-11ce-1123-f3f075d66910",
					"name": "Sample response",
					"request": {
						"name": "GET /metadata-catalog/resources",
						"description": "Getting decription of resources metadata catalog",
						"url": "{{accounts_gk}}/metadata-catalog/resources",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Resources metadata OK\"] = data.name === \"resources\";",
						"isFromCollection": true,
						"version": 2,
						"id": "2bd949fb-77ea-96e6-dbd1-c3514f47b03e",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true,
							"Resources metadata OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "f8853f37-7801-e7d2-293f-32d93a9784df"
					}
				}
			],
			"synced": false
		},
		{
			"id": "31860499-dd5e-d3a7-d8a8-426ac127bb07",
			"headers": "Authorization: {{auth_token}}\nAccept: application/schema+json\n",
			"url": "{{accounts_gk}}/metadata-catalog/resources",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435012640094,
			"name": "GET /metadata-catalog/resources(schema)",
			"description": "Getting decription of resources metadata catalog",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 402,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "close",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "638",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/schema+json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Wed, 24 Jun 2015 18:58:53 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "890",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"$schema\":\"https://public-api.vitrue.com/oraschema\",\"definitions\":{\"resource\":{\"allOf\":[{\"$ref\":\"https://public-api.vitrue.com/oraschema#/definitions/singularResource\"}],\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"The id for this resource.\"},\"name\":{\"type\":\"string\",\"description\":\"The name of this resource.\"},\"resourceType\":{\"type\":\"string\",\"description\":\"The type of resource.\"}},\"links\":[{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/admin/v1/resources/{id}\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://public-api.vitrue.com/admin/v1/resources/{id}\",\"method\":\"GET\"}]}},\"allOf\":[{\"$ref\":\"#/definitions/resource\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "5bebd6b9-f2c7-f694-ae62-fdf279f5ab23",
					"name": "Sample response",
					"request": {
						"name": "GET /metadata-catalog/resources(schema)",
						"description": "Getting decription of resources metadata catalog",
						"url": "{{accounts_gk}}/metadata-catalog/resources",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nAccept: application/schema+json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "31860499-dd5e-d3a7-d8a8-426ac127bb07",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "f8853f37-7801-e7d2-293f-32d93a9784df"
					}
				}
			],
			"synced": false
		},
		{
			"id": "3493039d-89ed-12d4-350a-8b7a590337a9",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "{{base_url}}/publish",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Version v1\"] = data.items[0].version === \"v1\";\ntests[\"Lifecycle acive\"] = data.items[0].lifecycle === \"active\";\ntests[\"Latest true\"] = data.items[0].isLatest === true;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435171625717,
			"name": "GET /publish (version)",
			"description": "Getting version data for Publish",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 102,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Encoding",
							"key": "Content-Encoding",
							"value": "gzip",
							"description": "The type of encoding used on the data."
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Tue, 16 Jun 2015 20:51:25 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "Transfer-Encoding",
							"key": "Transfer-Encoding",
							"value": "chunked",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "897",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"items\":[{\"version\":\"v1\",\"lifecycle\":\"active\",\"isLatest\":true,\"catalog\":{\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/metadata-catalog\"}]},\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1\"}]}],\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "62d5d35b-ce4a-19f1-444f-fb15b3d06873",
					"name": "Sample response",
					"request": {
						"name": "GET /publish",
						"description": "Getting version data for Publish",
						"url": "{{base_url}}/publish",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "3493039d-89ed-12d4-350a-8b7a590337a9",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "1e28fb72-3f47-dfaf-089a-0bb6ce92b1f4"
					}
				}
			],
			"synced": false
		},
		{
			"id": "39369004-0975-35e5-c900-6cd3abf645a4",
			"headers": "Authorization: {{auth_token}}\nAccept: application/schema+json\n",
			"url": "{{engage_gk}}/metadata-catalog/messages",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435012816683,
			"name": "GET /metadata-catalog/messages(schema)",
			"description": "Getting metadata list for messages SCHEMA+JSON",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 179,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Encoding",
							"key": "Content-Encoding",
							"value": "gzip",
							"description": "The type of encoding used on the data."
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Tue, 16 Jun 2015 20:52:16 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "Transfer-Encoding",
							"key": "Transfer-Encoding",
							"value": "chunked",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "897",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"$schema\":\"https://srm-api.sandbox.cloud.vitrue.com/oraschema\",\"definitions\":{\"message\":{\"allOf\":[{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/oraschema#/definitions/singularResource\"}],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"ID of the message.\"},\"type\":{\"type\":\"string\",\"description\":\"Type of message. [post|mention|direct_message]\"},\"externalId\":{\"type\":\"string\",\"description\":\"External ID of the message.\"},\"bundleId\":{\"type\":\"integer\",\"description\":\"ID of the root bundle account.\"},\"resource\":{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/metadata-catalog/resources\",\"description\":\"Info about the social network resource.\"},\"author\":{\"$ref\":\"#/definitions/author\",\"description\":\"Info about the author of the message.\"},\"originalAuthor\":{\"$ref\":\"#/definitions/author\",\"description\":\"Info about the original author of the message or message thread.\"},\"postedAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Date and time the message was posted.\"},\"threadPostedAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Date and time the of original post for the thread in which this message is included.\"},\"status\":{\"type\":\"string\",\"description\":\"The Engage status of this message. Can be: active, archived, hidden, deleted.\"},\"body\":{\"type\":\"string\",\"description\":\"The body of the message.\"},\"labels\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"Labels that have been attached manually or automatically to this message.\"},\"attachments\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/attachment\"},\"description\":\"Array of pictures, videos, or other items attached to this message.\"},\"liked\":{\"type\":\"boolean\",\"description\":\"Indicates whether or not this message is liked by the owning account.\"},\"likesCount\":{\"type\":\"integer\",\"description\":\"The number of likes this message has received.\"},\"favorited\":{\"type\":\"integer\",\"description\":\"Indicates whether or not this message is favorited by the owning account.\"},\"favoriteCount\":{\"type\":\"integer\",\"description\":\"The number of favorites this message has received.\"},\"repostCount\":{\"type\":\"integer\",\"description\":\"The number of times this message has been reposted/retweeted.\"},\"repliesCount\":{\"type\":\"integer\",\"description\":\"The number of replies this message has.\"},\"replies\":{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/messages/metadata-catalog/replies\"}},\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/messages/{id}\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/messages/{id}\",\"method\":\"GET\"},{\"rel\":\"edit\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/messages/{id}\",\"method\":\"PUT\"},{\"rel\":\"delete\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/messages/{id}\",\"method\":\"DELETE\"}]},\"author\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"Full name of the author.\"},\"authorImage\":{\"type\":\"string\",\"description\":\"Link to an image of the author.\"},\"authorProfileUrl\":{\"type\":\"string\",\"description\":\"Link to the profile of the author.\"},\"authorExternalId\":{\"type\":\"string\",\"description\":\"External network ID of the author.\"},\"authorFollowersCount\":{\"type\":\"integer\",\"description\":\"If the network supports this, the number of followers for the author.\"},\"authorKlout\":{\"type\":\"integer\",\"description\":\"Klout score of the author.\"}}},\"attachment\":{\"type\":\"object\",\"properties\":{\"type\":{\"type\":\"string\",\"description\":\"Type of attachment. Can be: photo or video.\"},\"url\":{\"type\":\"string\",\"description\":\"Link to the attachment.\"},\"thumbnailUrl\":{\"type\":\"string\",\"description\":\"Link to the thumbnail version of the attachment.\"},\"title\":{\"type\":\"string\",\"description\":\"Title of the attachment.\"},\"description\":{\"type\":\"string\",\"description\":\"Description of the attachment.\"}}},\"messages\":{\"allOf\":[{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/oraschema#/definitions/collectionPagedResource\"}],\"properties\":{\"items\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/message\"}}}}},\"allOf\":[{\"$ref\":\"#/definitions/messages\"}],\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/messages\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/messages\",\"method\":\"GET\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "d09148c1-424f-2bf6-39f2-1e1474899124",
					"name": "Sample response",
					"request": {
						"name": "GET /metadata-catalog/messages",
						"description": "Getting metadata list for messages SCHEMA+JSON",
						"url": "{{engage_gk}}/metadata-catalog/messages",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nContent-Type: application/schema+json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "39369004-0975-35e5-c900-6cd3abf645a4",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "1e28fb72-3f47-dfaf-089a-0bb6ce92b1f4"
					}
				}
			],
			"synced": false
		},
		{
			"id": "3f4c20ba-fd56-67f4-a88a-43e5f8c48ee5",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "{{base_url}}/engage",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Version v1\"] = data.items[0].version === \"v1\";\ntests[\"Lifecycle acive\"] = data.items[0].lifecycle === \"active\";\ntests[\"Latest true\"] = data.items[0].isLatest === true;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435171579371,
			"name": "GET /engage (version)",
			"description": "Getting version data for Engage",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 99,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Encoding",
							"key": "Content-Encoding",
							"value": "gzip",
							"description": "The type of encoding used on the data."
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Tue, 16 Jun 2015 20:51:08 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "Transfer-Encoding",
							"key": "Transfer-Encoding",
							"value": "chunked",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "897",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"items\":[{\"version\":\"v1\",\"lifecycle\":\"active\",\"isLatest\":true,\"catalog\":{\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/metadata-catalog\"}]},\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1\"}]}],\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "0b5b05f8-63b0-f744-f2a4-5e7e50e57a65",
					"name": "Sample response",
					"request": {
						"name": "GET /engage",
						"description": "Getting version data for Engage",
						"url": "{{base_url}}/engage",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "3f4c20ba-fd56-67f4-a88a-43e5f8c48ee5",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "1e28fb72-3f47-dfaf-089a-0bb6ce92b1f4"
					}
				}
			],
			"synced": false
		},
		{
			"id": "4bbd39ca-25a2-8782-d036-607b5022d527",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "{{base_url}}/publish/v1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Version v1\"] = data.version === \"v1\";\ntests[\"Lifecycle acive\"] = data.lifecycle === \"active\";\ntests[\"Latest true\"] = data.isLatest === true;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435171607914,
			"name": "GET /publish/v1 (version)",
			"description": "Getting version data for Publish",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 103,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Encoding",
							"key": "Content-Encoding",
							"value": "gzip",
							"description": "The type of encoding used on the data."
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Tue, 16 Jun 2015 20:51:33 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "Transfer-Encoding",
							"key": "Transfer-Encoding",
							"value": "chunked",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "897",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"version\":\"v1\",\"lifecycle\":\"active\",\"isLatest\":true,\"catalog\":{\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/metadata-catalog\"}]},\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "41514e32-5774-615b-cf29-546660d21d74",
					"name": "Sample response",
					"request": {
						"name": "GET /publish/v1",
						"description": "Getting version data for Publish",
						"url": "{{base_url}}/publish/v1",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "4bbd39ca-25a2-8782-d036-607b5022d527",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "1e28fb72-3f47-dfaf-089a-0bb6ce92b1f4"
					}
				}
			],
			"synced": false
		},
		{
			"id": "4d72b35b-0868-3e08-d9c0-219007c8112c",
			"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
			"url": "{{accounts_gk}}/metadata-catalog",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Accounts metadata OK\"] = data.items[0].name === \"accounts\";\ntests[\"Bundles metadata OK\"] = data.items[1].name === \"bundles\";\ntests[\"Resources metadata OK\"] = data.items[2].name === \"resources\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435171855909,
			"name": "GET /metadata-catalog (Accounts)",
			"description": "Getting metadata for Accounts",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 107,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Encoding",
							"key": "Content-Encoding",
							"value": "gzip",
							"description": "The type of encoding used on the data."
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Tue, 16 Jun 2015 20:51:39 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "Transfer-Encoding",
							"key": "Transfer-Encoding",
							"value": "chunked",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "897",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"items\":[{\"name\":\"accounts\",\"links\":[{\"rel\":\"alternate\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/metadata-catalog/accounts\",\"mediaType\":\"application/schema+json\"},{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/metadata-catalog/accounts\",\"mediaType\":\"application/json\"},{\"rel\":\"describes\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/accounts\"}]},{\"name\":\"bundles\",\"links\":[{\"rel\":\"alternate\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/metadata-catalog/bundles\",\"mediaType\":\"application/schema+json\"},{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/metadata-catalog/bundles\",\"mediaType\":\"application/json\"},{\"rel\":\"describes\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/bundles\"}]},{\"name\":\"resources\",\"links\":[{\"rel\":\"alternate\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/metadata-catalog/resources\",\"mediaType\":\"application/schema+json\"},{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/metadata-catalog/resources\",\"mediaType\":\"application/json\"},{\"rel\":\"describes\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/resources\"}]}],\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/metadata-catalog\"},{\"rel\":\"up\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "a2671da6-4e02-1904-ed2e-84a55e26fcd2",
					"name": "Sample response",
					"request": {
						"name": "GET /metadata-catalog accounts",
						"description": "Getting metadata for Accounts",
						"url": "{{accounts_gk}}/metadata-catalog",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "4d72b35b-0868-3e08-d9c0-219007c8112c",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "1e28fb72-3f47-dfaf-089a-0bb6ce92b1f4"
					}
				}
			],
			"synced": false
		},
		{
			"id": "54030c6e-8261-8f19-769c-c66644759edb",
			"headers": "Authorization: {{auth_token}}\nAccept: application/schema+json\n",
			"url": "{{accounts_gk}}/accounts/metadata-catalog/bundles",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435012611699,
			"name": "GET /accounts/metadata-catalog/bundles(schema)",
			"description": "Getting decription of bundle resource metadata catalog in accounts SCHEMA+JSON",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 638,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "close",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "1201",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/schema+json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Wed, 24 Jun 2015 18:58:14 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "890",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"$schema\":\"https://public-api.vitrue.com/oraschema\",\"definitions\":{\"accountId\":{\"type\":\"integer\",\"description\":\"The ID for the account.\"},\"bundle\":{\"allOf\":[{\"$ref\":\"https://public-api.vitrue.com/oraschema#/definitions/singularResource\"}],\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"The id for this bundle.\"},\"name\":{\"type\":\"string\",\"description\":\"The name of this bundle.\"},\"description\":{\"type\":\"string\",\"description\":\"The description of this bundle.\"},\"accountId\":{\"$ref\":\"#/definitions/accountId\"}},\"links\":[{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/admin/v1/bundles/{id}\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://public-api.vitrue.com/admin/v1/bundles/{id}\",\"method\":\"GET\"}]},\"bundles\":{\"allOf\":[{\"$ref\":\"https://public-api.vitrue.com/oraschema#/definitions/collectionPagedResource\"}],\"properties\":{\"items\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/bundle\"}}}}},\"allOf\":[{\"$ref\":\"#/definitions/bundles\"}],\"links\":[{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/admin/v1/accounts/{#/definitions/accountId}/bundles\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://public-api.vitrue.com/admin/v1/accounts/{#/definitions/accountId}/bundles\",\"method\":\"GET\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "8969e868-727d-9fa6-1cd3-4096cc62afe0",
					"name": "Sample response",
					"request": {
						"name": "GET /accounts/metadata-catalog/bundles(schema)",
						"description": "Getting decription of bundle resource metadata catalog in accounts SCHEMA+JSON",
						"url": "{{accounts_gk}}/accounts/metadata-catalog/bundles",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nAccept: application/schema+json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "54030c6e-8261-8f19-769c-c66644759edb",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "f8853f37-7801-e7d2-293f-32d93a9784df"
					}
				}
			],
			"synced": false
		},
		{
			"id": "5a327c29-a86e-956c-eabe-fabf38a60050",
			"headers": "Authorization: {{auth_token}}\nAccept: application/schema+json\n",
			"url": "{{accounts_gk}}/metadata-catalog/accounts",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435172195472,
			"name": "GET /metadata-catalog/accounts(schema)",
			"description": "Getting decription of account resource metadata catalog",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 118,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Encoding",
							"key": "Content-Encoding",
							"value": "gzip",
							"description": "The type of encoding used on the data."
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Tue, 16 Jun 2015 21:48:33 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "Transfer-Encoding",
							"key": "Transfer-Encoding",
							"value": "chunked",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "898",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"$schema\":\"https://srm-api.sandbox.cloud.vitrue.com/oraschema\",\"definitions\":{\"account\":{\"allOf\":[{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/oraschema#/definitions/singularResource\"}],\"properties\":{\"bundleId\":{\"$ref\":\"#/definitions/bundleId\"},\"name\":{\"type\":\"string\",\"description\":\"The name of this account.\"},\"description\":{\"type\":\"string\",\"description\":\"The description of this account.\"},\"bundles\":{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/accounts/metadata-catalog/bundles\"},\"resources\":{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/accounts/metadata-catalog/resources\"}},\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/bundles/{#/definitions/bundleId}\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/bundles/{#/definitions/bundleId}\",\"method\":\"GET\"}]},\"bundleId\":{\"type\":\"integer\",\"description\":\"The bundle ID for this account.\"},\"accounts\":{\"allOf\":[{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/oraschema#/definitions/collectionPagedResource\"}],\"properties\":{\"items\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/account\"}}}}},\"allOf\":[{\"$ref\":\"#/definitions/accounts\"}],\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/accounts\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/accounts\",\"method\":\"GET\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "99096849-ef78-d240-1961-a786a68fd988",
					"name": "Sample response",
					"request": {
						"name": "GET /metadata-catalog/accounts(schema)",
						"description": "Getting decription of account resource metadata catalog",
						"url": "{{accounts_gk}}/metadata-catalog/accounts",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nContent-Type: application/schema+json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "5a327c29-a86e-956c-eabe-fabf38a60050",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "2ba4b6b1-f20f-4eb4-4bf0-56c7c86617b3"
					}
				}
			],
			"synced": false
		},
		{
			"id": "5f70aa1f-ad93-f5f7-69e2-8ec7e0a33f51",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "{{base_url}}/engage/v1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Version v1\"] = data.version === \"v1\";\ntests[\"Lifecycle acive\"] = data.lifecycle === \"active\";\ntests[\"Latest true\"] = data.isLatest === true;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435171590976,
			"name": "GET /engage/v1 (version)",
			"description": "Getting version data for Engage",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 102,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Encoding",
							"key": "Content-Encoding",
							"value": "gzip",
							"description": "The type of encoding used on the data."
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Tue, 16 Jun 2015 20:51:14 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "Transfer-Encoding",
							"key": "Transfer-Encoding",
							"value": "chunked",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "897",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"version\":\"v1\",\"lifecycle\":\"active\",\"isLatest\":true,\"catalog\":{\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/metadata-catalog\"}]},\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "569255c5-d077-34ba-bd46-8695c618d356",
					"name": "Sample response",
					"request": {
						"name": "GET /engage/v1 ",
						"description": "Getting version data for Engage",
						"url": "{{base_url}}/engage/v1",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "5f70aa1f-ad93-f5f7-69e2-8ec7e0a33f51",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "1e28fb72-3f47-dfaf-089a-0bb6ce92b1f4"
					}
				}
			],
			"synced": false
		},
		{
			"id": "86341fb8-15fc-6302-1ce8-f6edefc9424c",
			"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
			"url": "{{accounts_gk}}/metadata-catalog/bundles",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Bundles metadata OK\"] = data.name === \"bundles\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435172043113,
			"name": "GET /metadata-catalog/bundles ",
			"description": "Getting description of bundles metadata catalog JSON",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 399,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "close",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "359",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/vnd.oracle.resource+json; type=singular",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Wed, 24 Jun 2015 18:56:52 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "893",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"name\":\"bundles\",\"links\":[{\"rel\":\"alternate\",\"href\":\"https://public-api.vitrue.com/admin/v1/metadata-catalog/bundles\",\"mediaType\":\"application/schema+json\"},{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/admin/v1/metadata-catalog/bundles\",\"mediaType\":\"application/json\"},{\"rel\":\"describes\",\"href\":\"https://public-api.vitrue.com/admin/v1/bundles\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "c48e71ac-15fb-3320-bdcc-63b85d4799f1",
					"name": "Sample response",
					"request": {
						"name": "GET /metadata-catalog/bundles ",
						"description": "Getting description of bundles metadata catalog JSON",
						"url": "{{accounts_gk}}/metadata-catalog/bundles",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Bundles metadata OK\"] = data.name === \"bundles\";",
						"isFromCollection": true,
						"version": 2,
						"id": "86341fb8-15fc-6302-1ce8-f6edefc9424c",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true,
							"Bundles metadata OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "f8853f37-7801-e7d2-293f-32d93a9784df"
					}
				}
			],
			"synced": false
		},
		{
			"id": "87ddd2f3-3bca-26d5-fdf9-41ac85c7f793",
			"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
			"url": "{{accounts_gk}}/metadata-catalog/accounts",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Accounts metadata OK\"] = data.name === \"accounts\";\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435171935244,
			"name": "GET /metadata-catalog/accounts",
			"description": "Getting decription of account resource metadata catalog",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 488,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "close",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "363",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/vnd.oracle.resource+json; type=singular",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Wed, 24 Jun 2015 18:52:13 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "897",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"name\":\"accounts\",\"links\":[{\"rel\":\"alternate\",\"href\":\"https://public-api.vitrue.com/admin/v1/metadata-catalog/accounts\",\"mediaType\":\"application/schema+json\"},{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/admin/v1/metadata-catalog/accounts\",\"mediaType\":\"application/json\"},{\"rel\":\"describes\",\"href\":\"https://public-api.vitrue.com/admin/v1/accounts\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "e1e321b5-37eb-5240-e6e2-17bcda4de19d",
					"name": "Sample response",
					"request": {
						"name": "GET /metadata-catalog/accounts",
						"description": "Getting decription of account resource metadata catalog",
						"url": "{{accounts_gk}}/metadata-catalog/accounts",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Accounts metadata OK\"] = data.name === \"accounts\";\n",
						"isFromCollection": true,
						"version": 2,
						"id": "87ddd2f3-3bca-26d5-fdf9-41ac85c7f793",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true,
							"Accounts metadata OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "f8853f37-7801-e7d2-293f-32d93a9784df"
					}
				}
			],
			"synced": false
		},
		{
			"id": "8dbb0aad-0b54-d908-748d-de4b264aecf4",
			"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
			"url": "{{accounts_gk}}/accounts/metadata-catalog/resources",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Resources metadata OK\"] = data.name === \"resources\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435172367505,
			"name": "GET /accounts/metadata-catalog/resources",
			"description": "Getting decription of resources metadata catalog in accounts JSON",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 325,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "close",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "399",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/vnd.oracle.resource+json; type=singular",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Wed, 24 Jun 2015 18:59:15 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "889",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"name\":\"resources\",\"links\":[{\"rel\":\"alternate\",\"href\":\"https://public-api.vitrue.com/admin/v1/accounts/metadata-catalog/resources\",\"mediaType\":\"application/schema+json\"},{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/admin/v1/accounts/metadata-catalog/resources\",\"mediaType\":\"application/json\"},{\"rel\":\"describes\",\"href\":\"https://public-api.vitrue.com/admin/v1/accounts/{id}/resources\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "ed69e273-00ba-6a39-3ab1-bb47f2a72147",
					"name": "Sample response",
					"request": {
						"name": "GET /accounts/metadata-catalog/resources",
						"description": "Getting decription of resources metadata catalog in accounts JSON",
						"url": "{{accounts_gk}}/accounts/metadata-catalog/resources",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Resources metadata OK\"] = data.name === \"resources\";",
						"isFromCollection": true,
						"version": 2,
						"id": "8dbb0aad-0b54-d908-748d-de4b264aecf4",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true,
							"Resources metadata OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "f8853f37-7801-e7d2-293f-32d93a9784df"
					}
				}
			],
			"synced": false
		},
		{
			"id": "9448a4dd-6dc1-1c49-3b90-ffa8da921d11",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "{{base_url}}/admin",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Version v1\"] = data.items[0].version === \"v1\";\ntests[\"Lifecycle acive\"] = data.items[0].lifecycle === \"active\";\ntests[\"Latest true\"] = data.items[0].isLatest === true;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435171059493,
			"name": "GET /admin (version)",
			"description": "Getting version data for Accounts",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 100,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Encoding",
							"key": "Content-Encoding",
							"value": "gzip",
							"description": "The type of encoding used on the data."
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Tue, 16 Jun 2015 20:50:30 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "Transfer-Encoding",
							"key": "Transfer-Encoding",
							"value": "chunked",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "898",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"items\":[{\"version\":\"v1\",\"lifecycle\":\"active\",\"isLatest\":true,\"catalog\":{\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/metadata-catalog\"}]},\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1\"}]}],\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "cdadd366-f269-1946-42c5-959a768ad474",
					"name": "Sample response",
					"request": {
						"name": "GET /admin",
						"description": "Getting version data for Accounts",
						"url": "{{base_url}}/admin",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "9448a4dd-6dc1-1c49-3b90-ffa8da921d11",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "1e28fb72-3f47-dfaf-089a-0bb6ce92b1f4"
					}
				}
			],
			"synced": false
		},
		{
			"id": "9d88064d-ee6d-4291-81e6-c7248d341b21",
			"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
			"url": "{{accounts_gk}}/bundles/metadata-catalog/resources",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Resources metadata OK\"] = data.name === \"resources\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435172403063,
			"name": "GET /bundles/metadata-catalog/resources",
			"description": "Getting decription of bundles' resources metadata catalog JSON",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 561,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "close",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "396",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/vnd.oracle.resource+json; type=singular",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Wed, 24 Jun 2015 19:04:05 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "881",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"name\":\"resources\",\"links\":[{\"rel\":\"alternate\",\"href\":\"https://public-api.vitrue.com/admin/v1/bundles/metadata-catalog/resources\",\"mediaType\":\"application/schema+json\"},{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/admin/v1/bundles/metadata-catalog/resources\",\"mediaType\":\"application/json\"},{\"rel\":\"describes\",\"href\":\"https://public-api.vitrue.com/admin/v1/bundles/{id}/resources\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "a26afef5-b7f4-08fc-f6e4-7070340cc417",
					"name": "Sample response",
					"request": {
						"name": "GET /bundles/metadata-catalog/resources",
						"description": "Getting decription of bundles' resources metadata catalog JSON",
						"url": "{{accounts_gk}}/bundles/metadata-catalog/resources",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Resources metadata OK\"] = data.name === \"resources\";",
						"isFromCollection": true,
						"version": 2,
						"id": "9d88064d-ee6d-4291-81e6-c7248d341b21",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true,
							"Resources metadata OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "f8853f37-7801-e7d2-293f-32d93a9784df"
					}
				}
			],
			"synced": false
		},
		{
			"id": "a09a2c89-c50d-45d6-bc2a-69427a2056b5",
			"headers": "Authorization: {{auth_token}}\nAccept: application/schema+json\n",
			"url": "{{publish_gk}}/metadata-catalog/posts",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435012757567,
			"name": "GET /metadata-catalog/posts(schema)",
			"description": "Getting metadata for posts Publish SHEMA+JSON",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 123,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Encoding",
							"key": "Content-Encoding",
							"value": "gzip",
							"description": "The type of encoding used on the data."
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Tue, 16 Jun 2015 21:54:24 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "Transfer-Encoding",
							"key": "Transfer-Encoding",
							"value": "chunked",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "898",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"$schema\":\"https://srm-api.sandbox.cloud.vitrue.com/oraschema\",\"definitions\":{\"post\":{\"allOf\":[{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/oraschema#/definitions/singularResource\"}],\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"ID of the post.\"},\"body\":{\"type\":\"string\",\"description\":\"The body of the post.\"},\"reportName\":{\"type\":\"string\",\"description\":\"The report name of the post.\"},\"authoredBy\":{\"$ref\":\"#/definitions/authoredBy\"},\"link\":{\"type\":\"string\",\"description\":\"Link to the post.\"},\"status\":{\"type\":\"string\",\"description\":\"The status of the post.\"},\"resource\":{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/#/admin/v1/metadata-catalog/resources\",\"description\":\"Info about the social network resource.\"},\"attachments\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/attachment\"},\"description\":\"Array of pictures, videos, or other items attached to this reply.\"},\"createdAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Date and time the post was created.\"},\"postedAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Date and time the post was published.\"},\"publishAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Date and time the posted was posted.\"}},\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/posts/{id}\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/posts/{id}\",\"method\":\"GET\"},{\"rel\":\"edit\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/posts/{id}\",\"method\":\"PUT\"},{\"rel\":\"delete\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/posts/{id}\",\"method\":\"DELETE\"}]},\"authoredBy\":{\"type\":\"object\",\"description\":\"Information about the user that wrote this post.\",\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"SRM User ID of the author.\"},\"name\":{\"type\":\"string\",\"description\":\"Fullname of the author.\"}}},\"attachment\":{\"type\":\"object\",\"properties\":{\"type\":{\"type\":\"string\",\"description\":\"Type of attachment. Can be: photo or video.\"},\"url\":{\"type\":\"string\",\"description\":\"Link to the attachment.\"},\"thumbnailUrl\":{\"type\":\"string\",\"description\":\"Link to the thumbnail version of the attachment.\"},\"title\":{\"type\":\"string\",\"description\":\"Title of the attachment.\"},\"description\":{\"type\":\"string\",\"description\":\"Description of the attachment.\"}}},\"posts\":{\"allOf\":[{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/oraschema#/definitions/collectionPagedResource\"}],\"properties\":{\"items\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/post\"}}}}},\"allOf\":[{\"$ref\":\"#/definitions/posts\"}],\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/posts\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/posts\",\"method\":\"GET\"},{\"rel\":\"create\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/posts\",\"method\":\"POST\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "58ba0416-dddd-c415-3c0f-1e64777ed480",
					"name": "Sample response",
					"request": {
						"name": "GET /metadata-catalog/posts(schema)",
						"description": "Getting metadata for posts Publish SHEMA+JSON",
						"url": "{{publish_gk}}/metadata-catalog/posts",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nContent-Type: application/schema+json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "a09a2c89-c50d-45d6-bc2a-69427a2056b5",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "2ba4b6b1-f20f-4eb4-4bf0-56c7c86617b3"
					}
				}
			],
			"synced": false
		},
		{
			"id": "a91dd809-7864-4e67-fb61-9f3fec3a88bb",
			"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
			"url": "{{accounts_gk}}/accounts/metadata-catalog/bundles",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Bundles metadata OK\"] = data.name === \"bundles\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435172283237,
			"name": "GET /accounts/metadata-catalog/bundles",
			"description": "Getting decription of bundle resource metadata catalog JSON",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 495,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "close",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "391",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/vnd.oracle.resource+json; type=singular",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Wed, 24 Jun 2015 18:57:42 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "892",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"name\":\"bundles\",\"links\":[{\"rel\":\"alternate\",\"href\":\"https://public-api.vitrue.com/admin/v1/accounts/metadata-catalog/bundles\",\"mediaType\":\"application/schema+json\"},{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/admin/v1/accounts/metadata-catalog/bundles\",\"mediaType\":\"application/json\"},{\"rel\":\"describes\",\"href\":\"https://public-api.vitrue.com/admin/v1/accounts/{id}/bundles\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "ee627709-dd73-ba29-708a-4a83f540f5ff",
					"name": "Sample response",
					"request": {
						"name": "GET /accounts/metadata-catalog/bundles",
						"description": "Getting decription of bundle resource metadata catalog JSON",
						"url": "{{accounts_gk}}/accounts/metadata-catalog/bundles",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "a91dd809-7864-4e67-fb61-9f3fec3a88bb",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "f8853f37-7801-e7d2-293f-32d93a9784df"
					}
				}
			],
			"synced": false
		},
		{
			"id": "c64122e0-72cb-ded2-49d0-d4adc4a490fa",
			"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
			"url": "{{publish_gk}}/metadata-catalog",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Publish metadata OK\"] = data.items[0].name === \"posts\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435173260459,
			"name": "GET /metadata-catalog (Publish)",
			"description": "Getting metadata for Publish",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 297,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "584",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/vnd.oracle.resource+json; type=collection",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Mon, 22 Jun 2015 22:48:49 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "879",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"items\":[{\"name\":\"posts\",\"links\":[{\"rel\":\"alternate\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/metadata-catalog/posts\",\"mediaType\":\"application/schema+json\"},{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/metadata-catalog/posts\",\"mediaType\":\"application/json\"},{\"rel\":\"describes\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/posts\"}]}],\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/metadata-catalog\"},{\"rel\":\"up\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "019583d3-5719-6702-e6d2-b6929e3c9802",
					"name": "Sample response",
					"request": {
						"name": "GET /metadata-catalog (Publish)",
						"description": "Getting metadata for Publish",
						"url": "{{publish_gk}}/metadata-catalog",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "c64122e0-72cb-ded2-49d0-d4adc4a490fa",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "f8853f37-7801-e7d2-293f-32d93a9784df"
					}
				}
			],
			"synced": false
		},
		{
			"id": "cc16dfeb-b11f-d2ec-5a22-40a370d611bc",
			"headers": "Authorization: {{auth_token}}\nAccept: application/schema+json\n",
			"url": "{{accounts_gk}}/bundles/metadata-catalog/resources",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435012672830,
			"name": "GET /bundles/metadata-catalog/resources(schema)",
			"description": "Getting decription of bundles' resources metadata catalog SCHEMA+JSON",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 117,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Encoding",
							"key": "Content-Encoding",
							"value": "gzip",
							"description": "The type of encoding used on the data."
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Tue, 16 Jun 2015 20:50:57 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "Transfer-Encoding",
							"key": "Transfer-Encoding",
							"value": "chunked",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "897",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"$schema\":\"https://srm-api.sandbox.cloud.vitrue.com/oraschema\",\"definitions\":{\"resource\":{\"allOf\":[{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/oraschema#/definitions/singularResource\"}],\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"The id for this resource.\"},\"name\":{\"type\":\"string\",\"description\":\"The name of this resource.\"},\"resourceType\":{\"type\":\"string\",\"description\":\"The type of resource.\"},\"bundleId\":{\"$ref\":\"#/definitions/bundleId\"}},\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/resources/{id}\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/resources/{id}\",\"method\":\"GET\"}]},\"bundleId\":{\"type\":\"integer\",\"description\":\"The bundle ID for this account.\"},\"resources\":{\"allOf\":[{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/oraschema#/definitions/collectionPagedResource\"}],\"properties\":{\"items\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/resource\"}}}}},\"allOf\":[{\"$ref\":\"#/definitions/resources\"}],\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/bundles/{#/definitions/bundleId}/resources\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/bundles/{#/definitions/bundleId}/resources\",\"method\":\"GET\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "d0090f31-264a-b3fa-bbf4-ac5b24cf9a5d",
					"name": "Sample response",
					"request": {
						"name": "GET /admin/v1/metadata-catalog/bundles",
						"description": "Getting decription of bundles' resources metadata catalog",
						"url": "{{base_url}}/admin/v1/bundles/metadata-catalog/resources",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nContent-Type: application/schema+json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "9d88064d-ee6d-4291-81e6-c7248d341b21",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "1e28fb72-3f47-dfaf-089a-0bb6ce92b1f4"
					}
				}
			],
			"synced": false
		},
		{
			"id": "ccb01542-66ac-2bc1-af2d-9f5fa503e522",
			"headers": "Authorization: {{auth_token}}\nAccept: application/schema+json\n",
			"url": "{{engage_gk}}/messages/metadata-catalog/replies",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435012727080,
			"name": "GET /messages/metadata-catalog/replies(schema)",
			"description": "Getting metadata list for replies SCHEMA+JSON",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 179,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Encoding",
							"key": "Content-Encoding",
							"value": "gzip",
							"description": "The type of encoding used on the data."
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Tue, 16 Jun 2015 20:52:16 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "Transfer-Encoding",
							"key": "Transfer-Encoding",
							"value": "chunked",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "897",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"$schema\":\"https://srm-api.sandbox.cloud.vitrue.com/oraschema\",\"definitions\":{\"message\":{\"allOf\":[{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/oraschema#/definitions/singularResource\"}],\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"ID of the message.\"},\"type\":{\"type\":\"string\",\"description\":\"Type of message. [post|mention|direct_message]\"},\"externalId\":{\"type\":\"string\",\"description\":\"External ID of the message.\"},\"bundleId\":{\"type\":\"integer\",\"description\":\"ID of the root bundle account.\"},\"resource\":{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/admin/v1/metadata-catalog/resources\",\"description\":\"Info about the social network resource.\"},\"author\":{\"$ref\":\"#/definitions/author\",\"description\":\"Info about the author of the message.\"},\"originalAuthor\":{\"$ref\":\"#/definitions/author\",\"description\":\"Info about the original author of the message or message thread.\"},\"postedAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Date and time the message was posted.\"},\"threadPostedAt\":{\"type\":\"string\",\"format\":\"date-time\",\"description\":\"Date and time the of original post for the thread in which this message is included.\"},\"status\":{\"type\":\"string\",\"description\":\"The Engage status of this message. Can be: active, archived, hidden, deleted.\"},\"body\":{\"type\":\"string\",\"description\":\"The body of the message.\"},\"labels\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"description\":\"Labels that have been attached manually or automatically to this message.\"},\"attachments\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/attachment\"},\"description\":\"Array of pictures, videos, or other items attached to this message.\"},\"liked\":{\"type\":\"boolean\",\"description\":\"Indicates whether or not this message is liked by the owning account.\"},\"likesCount\":{\"type\":\"integer\",\"description\":\"The number of likes this message has received.\"},\"favorited\":{\"type\":\"integer\",\"description\":\"Indicates whether or not this message is favorited by the owning account.\"},\"favoriteCount\":{\"type\":\"integer\",\"description\":\"The number of favorites this message has received.\"},\"repostCount\":{\"type\":\"integer\",\"description\":\"The number of times this message has been reposted/retweeted.\"},\"repliesCount\":{\"type\":\"integer\",\"description\":\"The number of replies this message has.\"},\"replies\":{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/messages/metadata-catalog/replies\"}},\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/messages/{id}\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/messages/{id}\",\"method\":\"GET\"},{\"rel\":\"edit\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/messages/{id}\",\"method\":\"PUT\"},{\"rel\":\"delete\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/messages/{id}\",\"method\":\"DELETE\"}]},\"author\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"Full name of the author.\"},\"authorImage\":{\"type\":\"string\",\"description\":\"Link to an image of the author.\"},\"authorProfileUrl\":{\"type\":\"string\",\"description\":\"Link to the profile of the author.\"},\"authorExternalId\":{\"type\":\"string\",\"description\":\"External network ID of the author.\"},\"authorFollowersCount\":{\"type\":\"integer\",\"description\":\"If the network supports this, the number of followers for the author.\"},\"authorKlout\":{\"type\":\"integer\",\"description\":\"Klout score of the author.\"}}},\"attachment\":{\"type\":\"object\",\"properties\":{\"type\":{\"type\":\"string\",\"description\":\"Type of attachment. Can be: photo or video.\"},\"url\":{\"type\":\"string\",\"description\":\"Link to the attachment.\"},\"thumbnailUrl\":{\"type\":\"string\",\"description\":\"Link to the thumbnail version of the attachment.\"},\"title\":{\"type\":\"string\",\"description\":\"Title of the attachment.\"},\"description\":{\"type\":\"string\",\"description\":\"Description of the attachment.\"}}},\"messages\":{\"allOf\":[{\"$ref\":\"https://srm-api.sandbox.cloud.vitrue.com/oraschema#/definitions/collectionPagedResource\"}],\"properties\":{\"items\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/message\"}}}}},\"allOf\":[{\"$ref\":\"#/definitions/messages\"}],\"links\":[{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/messages\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/engage/v1/messages\",\"method\":\"GET\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "0051807a-9082-c734-f819-a78b43fb05f2",
					"name": "Sample response",
					"request": {
						"name": "GET /metadata-catalog/messages",
						"description": "Getting metadata list for messages SCHEMA+JSON",
						"url": "{{engage_gk}}/metadata-catalog/messages",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nContent-Type: application/schema+json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "39369004-0975-35e5-c900-6cd3abf645a4",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "1e28fb72-3f47-dfaf-089a-0bb6ce92b1f4"
					}
				}
			],
			"synced": false
		},
		{
			"id": "f1184b01-c2c2-cffe-08b8-484907c4021b",
			"headers": "Authorization: {{auth_token}}\n",
			"url": "{{base_url}}/admin/v1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Version v1\"] = data.version === \"v1\";\ntests[\"Lifecycle acive\"] = data.lifecycle === \"active\";\ntests[\"Latest true\"] = data.isLatest === true;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435171105820,
			"name": "GET /admin/v1 (version)",
			"description": "Getting version data for Accounts",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 354,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "close",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "238",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/vnd.oracle.resource+json; type=singular",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Wed, 24 Jun 2015 18:40:46 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "899",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"version\":\"v1\",\"lifecycle\":\"active\",\"isLatest\":true,\"catalog\":{\"links\":[{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/admin/v1/metadata-catalog\"}]},\"links\":[{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/admin/v1\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "1bc4b05d-3d99-7e43-a3bc-e584e3c36eee",
					"name": "Sample response",
					"request": {
						"name": "GET /admin/v1 (version)",
						"description": "Getting version data for Accounts",
						"url": "{{base_url}}/admin/v1",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Version v1\"] = data.version === \"v1\";\ntests[\"Lifecycle acive\"] = data.lifecycle === \"active\";\ntests[\"Latest true\"] = data.isLatest === true;",
						"isFromCollection": true,
						"version": 2,
						"id": "f1184b01-c2c2-cffe-08b8-484907c4021b",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true,
							"Version v1": true,
							"Lifecycle acive": true,
							"Latest true": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "f8853f37-7801-e7d2-293f-32d93a9784df"
					}
				}
			],
			"synced": false
		},
		{
			"id": "fb223f37-78b9-86e2-e252-d0578da53437",
			"headers": "Authorization: {{auth_token}}\nAccept: application/json\n",
			"url": "{{publish_gk}}/metadata-catalog/posts",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\nvar data = JSON.parse(responseBody);\ntests[\"Posts metadata OK\"] = data.name === \"posts\";",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435173297120,
			"name": "GET /metadata-catalog/posts",
			"description": "Getting metadata for posts Publish JSON",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 196,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "keep-alive",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Encoding",
							"key": "Content-Encoding",
							"value": "gzip",
							"description": "The type of encoding used on the data."
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Tue, 16 Jun 2015 21:54:08 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "Transfer-Encoding",
							"key": "Transfer-Encoding",
							"value": "chunked",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "898",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"name\":\"posts\",\"links\":[{\"rel\":\"alternate\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/metadata-catalog/posts\",\"mediaType\":\"application/schema+json\"},{\"rel\":\"canonical\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/metadata-catalog/posts\",\"mediaType\":\"application/json\"},{\"rel\":\"describes\",\"href\":\"https://srm-api.sandbox.cloud.vitrue.com/publish/v1/posts\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "6a17e669-d44d-8679-1866-84d3cb60c7ca",
					"name": "Sample response",
					"request": {
						"name": "GET /metadata-catalog/posts",
						"description": "Getting metadata for posts Publish JSON",
						"url": "{{publish_gk}}/metadata-catalog/posts",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nContent-Type: application/json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "fb223f37-78b9-86e2-e252-d0578da53437",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "2ba4b6b1-f20f-4eb4-4bf0-56c7c86617b3"
					}
				}
			],
			"synced": false
		},
		{
			"id": "fd7a4e0e-a3c0-f1f9-3c0a-cadeefe8bd7f",
			"headers": "Authorization: {{auth_token}}\nAccept: application/schema+json\n",
			"url": "{{accounts_gk}}/metadata-catalog/bundles",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435012576694,
			"name": "GET /metadata-catalog/bundles(schema)",
			"description": "Getting description of bundles metadata catalog SCHEMA+JSON",
			"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
			"responses": [
				{
					"status": "",
					"responseCode": {
						"code": 200,
						"name": "OK",
						"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
					},
					"time": 488,
					"headers": [
						{
							"name": "Connection",
							"key": "Connection",
							"value": "close",
							"description": "Options that are desired for the connection"
						},
						{
							"name": "Content-Length",
							"key": "Content-Length",
							"value": "732",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"name": "Content-Type",
							"key": "Content-Type",
							"value": "application/schema+json",
							"description": "The mime type of this content"
						},
						{
							"name": "Date",
							"key": "Date",
							"value": "Wed, 24 Jun 2015 18:57:14 GMT",
							"description": "The date and time that the message was sent"
						},
						{
							"name": "Server",
							"key": "Server",
							"value": "nginx/1.4.2",
							"description": "A name for the server"
						},
						{
							"name": "Status",
							"key": "Status",
							"value": "200 OK",
							"description": "Custom header"
						},
						{
							"name": "X-Content-Type-Options",
							"key": "X-Content-Type-Options",
							"value": "nosniff",
							"description": "The only defined value, \"nosniff\", prevents Internet Explorer from MIME-sniffing a response away from the declared content-type"
						},
						{
							"name": "X-RateLimit-Limit",
							"key": "X-RateLimit-Limit",
							"value": "900",
							"description": "Custom header"
						},
						{
							"name": "X-RateLimit-Remaining",
							"key": "X-RateLimit-Remaining",
							"value": "893",
							"description": "Custom header"
						}
					],
					"cookies": [],
					"mime": "",
					"text": "{\"$schema\":\"https://public-api.vitrue.com/oraschema\",\"definitions\":{\"bundle\":{\"allOf\":[{\"$ref\":\"https://public-api.vitrue.com/oraschema#/definitions/singularResource\"}],\"properties\":{\"id\":{\"type\":\"integer\",\"description\":\"The id for this bundle.\"},\"name\":{\"type\":\"string\",\"description\":\"The name of this bundle.\"},\"description\":{\"type\":\"string\",\"description\":\"The description of this bundle.\"},\"resources\":{\"$ref\":\"https://public-api.vitrue.com/admin/v1/bundles/metadata-catalog/resources\"}},\"links\":[{\"rel\":\"canonical\",\"href\":\"https://public-api.vitrue.com/admin/v1/bundles/{id}\",\"method\":\"GET\"},{\"rel\":\"self\",\"href\":\"https://public-api.vitrue.com/admin/v1/bundles/{id}\",\"method\":\"GET\"}]}},\"allOf\":[{\"$ref\":\"#/definitions/bundle\"}]}",
					"language": "javascript",
					"rawDataType": "text",
					"state": {
						"size": "normal"
					},
					"previewType": "html",
					"searchResultScrolledTo": -1,
					"forceNoPretty": false,
					"write": true,
					"empty": false,
					"isSample": true,
					"scrollToResult": true,
					"runTests": true,
					"id": "f8dd9065-eddd-caaf-32a2-455fd6c0d995",
					"name": "Sample response",
					"request": {
						"name": "GET /metadata-catalog/bundles(schema)",
						"description": "Getting description of bundles metadata catalog SCHEMA+JSON",
						"url": "{{accounts_gk}}/metadata-catalog/bundles",
						"pathVariables": {},
						"data": [],
						"headers": "Authorization: {{auth_token}}\nAccept: application/schema+json\n",
						"dataMode": "params",
						"method": "GET",
						"tests": "//Verifying response code\ntests[\"Status code is 200 OK\"] = responseCode.code === 200;\n\n//Verifying response data\n",
						"isFromCollection": true,
						"version": 2,
						"id": "fd7a4e0e-a3c0-f1f9-3c0a-cadeefe8bd7f",
						"collectionId": "70a47ae9-a51b-756a-9cf8-62dd1425e119",
						"currentHelper": "normal",
						"helperAttributes": {},
						"testResults": {
							"Status code is 200 OK": true
						},
						"testErrors": null,
						"uiState": {
							"waitingForInterceptorResponse": false,
							"waitingForResponse": false
						},
						"sentFromTab": "f8853f37-7801-e7d2-293f-32d93a9784df"
					}
				}
			],
			"synced": false
		}
	]
}